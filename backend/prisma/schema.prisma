// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String?
  createdAt DateTime  @default(now())

  role     String  @default("USER") // USER hoặc ADMIN
  orders    Order[]
  favorites Favorite[]
  cart      Cart[]
}

model Product {
  id          String     @id @default(uuid())
  title       String
  description String?
  price       Float
  imageUrl    String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  carts      Cart[]      // back-relation với Cart
  favorites  Favorite[]  // back-relation với Favorite
}

model Cart {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int      @default(1)

  @@unique([userId, productId]) // unique-contraint (ràng buộc duy nhất) này được thêm vào khi test API thêm vào giỏ hàng báo lỗi 
}

model Order {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  items     Json
  total     Float
  createdAt DateTime @default(now())
}

model Favorite {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
}

